
;; Function vector_add (vector_add, funcdef_no=0, decl_uid=1454, cgraph_uid=1, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


vector_add

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;;  regs ever live 	 10 [a0] 11 [a1]
;;  ref usage 	r1={1d,1u} r2={1d,2u} r8={1d,2u} r10={1d,1u} r11={1d,1u} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d} r17={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r64={1d,1u} r65={1d,2u} r84={1d,8u} r85={1d,4u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} 
;;    total ref usage 69{35d,34u,0e} in 18{18 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  reg->defs[] map:	1[0,0] 2[1,1] 8[2,2] 10[3,3] 11[4,4] 12[5,5] 13[6,6] 14[7,7] 15[8,8] 16[9,9] 17[10,10] 42[11,11] 43[12,12] 44[13,13] 45[14,14] 46[15,15] 47[16,16] 48[17,17] 49[18,18] 64[19,19] 65[20,20] 84[21,21] 85[22,22] 86[23,23] 87[24,24] 88[25,25] 89[26,26] 90[27,27] 91[28,28] 92[29,29] 93[30,30] 94[31,31] 95[32,32] 96[33,33] 97[34,34] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(1){ }d1(2){ }d2(8){ }d3(10){ }d4(11){ }d5(12){ }d6(13){ }d7(14){ }d8(15){ }d9(16){ }d10(17){ }d11(42){ }d12(43){ }d13(44){ }d14(45){ }d15(46){ }d16(47){ }d17(48){ }d18(49){ }d19(64){ }d20(65){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  in  	
;; live  gen 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(21) 1[0],2[1],8[2],10[3],11[4],12[5],13[6],14[7],15[8],16[9],17[10],42[11],43[12],44[13],45[14],46[15],47[16],48[17],49[18],64[19],65[20]
;; rd  kill	(21) 1[0],2[1],8[2],10[3],11[4],12[5],13[6],14[7],15[8],16[9],17[10],42[11],43[12],44[13],45[14],46[15],47[16],48[17],49[18],64[19],65[20]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 64 [arg] 65 [frame]
;; live  out 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 64 [arg] 65 [frame]
;; rd  out 	(7) 1[0],2[1],8[2],10[3],11[4],64[19],65[20]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(2){ d1(bb 0 insn -1) }u-1(8){ d2(bb 0 insn -1) }u-1(64){ d19(bb 0 insn -1) }u-1(65){ d20(bb 0 insn -1) }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 10 [a0] 11 [a1] 64 [arg] 65 [frame]
;; lr  def 	 84 85 86 87 88 89 90 91 92 93 94 95 96 97
;; live  in  	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 64 [arg] 65 [frame]
;; live  gen 	 84 85 86 87 88 89 90 91 92 93 94 95 96 97
;; live  kill	
;; rd  in  	(7) 1[0],2[1],8[2],10[3],11[4],64[19],65[20]
;; rd  gen 	(14) 84[21],85[22],86[23],87[24],88[25],89[26],90[27],91[28],92[29],93[30],94[31],95[32],96[33],97[34]
;; rd  kill	(14) 84[21],85[22],86[23],87[24],88[25],89[26],90[27],91[28],92[29],93[30],94[31],95[32],96[33],97[34]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  out 	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; rd  out 	(5) 1[0],2[1],8[2],64[19],65[20]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d1(bb 0 insn -1) }
;;   reg 8 { d2(bb 0 insn -1) }
;;   reg 64 { d19(bb 0 insn -1) }
;;   reg 65 { d20(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(1){ d0(bb 0 insn -1) }u-1(2){ d1(bb 0 insn -1) }u-1(8){ d2(bb 0 insn -1) }u-1(65){ d20(bb 0 insn -1) }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;; lr  use 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;; lr  def 	
;; live  in  	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 1[0],2[1],8[2],64[19],65[20]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 1 { d0(bb 0 insn -1) }
;;   reg 2 { d1(bb 0 insn -1) }
;;   reg 8 { d2(bb 0 insn -1) }
;;   reg 65 { d20(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 22 to worklist
  Adding insn 18 to worklist
  Adding insn 14 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 84 [ a ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 86) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 87 [ *a_11(D) ]) in insn 9:
  Adding insn 7 to worklist
Processing use of (reg 88 [ *b_12(D) ]) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 85 [ b ]) in insn 8:
  Adding insn 3 to worklist
Processing use of (reg 11 a1) in insn 3:
Processing use of (reg 84 [ a ]) in insn 7:
Processing use of (reg 10 a0) in insn 2:
Processing use of (reg 84 [ a ]) in insn 14:
Processing use of (reg 89) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 90 [ MEM[(int *)a_11(D) + 4B] ]) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 91 [ MEM[(int *)b_12(D) + 4B] ]) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 85 [ b ]) in insn 12:
Processing use of (reg 84 [ a ]) in insn 11:
Processing use of (reg 84 [ a ]) in insn 18:
Processing use of (reg 92) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 93 [ MEM[(int *)a_11(D) + 8B] ]) in insn 17:
  Adding insn 15 to worklist
Processing use of (reg 94 [ MEM[(int *)b_12(D) + 8B] ]) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 85 [ b ]) in insn 16:
Processing use of (reg 84 [ a ]) in insn 15:
Processing use of (reg 84 [ a ]) in insn 22:
Processing use of (reg 95) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 96 [ MEM[(int *)a_11(D) + 12B] ]) in insn 21:
  Adding insn 19 to worklist
Processing use of (reg 97 [ MEM[(int *)b_12(D) + 12B] ]) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 85 [ b ]) in insn 20:
Processing use of (reg 84 [ a ]) in insn 19:
starting the processing of deferred insns
ending the processing of deferred insns


vector_add

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;;  regs ever live 	 10 [a0] 11 [a1]
;;  ref usage 	r1={1d,1u} r2={1d,2u} r8={1d,2u} r10={1d,1u} r11={1d,1u} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d} r17={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r64={1d,1u} r65={1d,2u} r84={1d,8u} r85={1d,4u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} 
;;    total ref usage 69{35d,34u,0e} in 18{18 regular + 0 call} insns.
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:SI 84 [ a ])
        (reg:SI 10 a0 [ a ])) "o.c":1:34 136 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 10 a0 [ a ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:SI 85 [ b ])
        (reg:SI 11 a1 [ b ])) "o.c":1:34 136 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 11 a1 [ b ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 87 [ *a_11(D) ])
        (mem:SI (reg/v/f:SI 84 [ a ]) [1 *a_11(D)+0 S4 A32])) "o.c":3:14 136 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ *b_12(D) ])
        (mem:SI (reg/v/f:SI 85 [ b ]) [1 *b_12(D)+0 S4 A32])) "o.c":3:14 136 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 86)
        (plus:SI (reg:SI 87 [ *a_11(D) ])
            (reg:SI 88 [ *b_12(D) ]))) "o.c":3:14 3 {addsi3}
     (expr_list:REG_DEAD (reg:SI 88 [ *b_12(D) ])
        (expr_list:REG_DEAD (reg:SI 87 [ *a_11(D) ])
            (nil))))
(insn 10 9 11 2 (set (mem:SI (reg/v/f:SI 84 [ a ]) [1 *a_11(D)+0 S4 A32])
        (reg:SI 86)) "o.c":3:14 136 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 90 [ MEM[(int *)a_11(D) + 4B] ])
        (mem:SI (plus:SI (reg/v/f:SI 84 [ a ])
                (const_int 4 [0x4])) [1 MEM[(int *)a_11(D) + 4B]+0 S4 A32])) "o.c":3:14 136 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 91 [ MEM[(int *)b_12(D) + 4B] ])
        (mem:SI (plus:SI (reg/v/f:SI 85 [ b ])
                (const_int 4 [0x4])) [1 MEM[(int *)b_12(D) + 4B]+0 S4 A32])) "o.c":3:14 136 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:SI 89)
        (plus:SI (reg:SI 90 [ MEM[(int *)a_11(D) + 4B] ])
            (reg:SI 91 [ MEM[(int *)b_12(D) + 4B] ]))) "o.c":3:14 3 {addsi3}
     (expr_list:REG_DEAD (reg:SI 91 [ MEM[(int *)b_12(D) + 4B] ])
        (expr_list:REG_DEAD (reg:SI 90 [ MEM[(int *)a_11(D) + 4B] ])
            (nil))))
(insn 14 13 15 2 (set (mem:SI (plus:SI (reg/v/f:SI 84 [ a ])
                (const_int 4 [0x4])) [1 MEM[(int *)a_11(D) + 4B]+0 S4 A32])
        (reg:SI 89)) "o.c":3:14 136 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89)
        (nil)))
(insn 15 14 16 2 (set (reg:SI 93 [ MEM[(int *)a_11(D) + 8B] ])
        (mem:SI (plus:SI (reg/v/f:SI 84 [ a ])
                (const_int 8 [0x8])) [1 MEM[(int *)a_11(D) + 8B]+0 S4 A32])) "o.c":3:14 136 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:SI 94 [ MEM[(int *)b_12(D) + 8B] ])
        (mem:SI (plus:SI (reg/v/f:SI 85 [ b ])
                (const_int 8 [0x8])) [1 MEM[(int *)b_12(D) + 8B]+0 S4 A32])) "o.c":3:14 136 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 92)
        (plus:SI (reg:SI 93 [ MEM[(int *)a_11(D) + 8B] ])
            (reg:SI 94 [ MEM[(int *)b_12(D) + 8B] ]))) "o.c":3:14 3 {addsi3}
     (expr_list:REG_DEAD (reg:SI 94 [ MEM[(int *)b_12(D) + 8B] ])
        (expr_list:REG_DEAD (reg:SI 93 [ MEM[(int *)a_11(D) + 8B] ])
            (nil))))
(insn 18 17 19 2 (set (mem:SI (plus:SI (reg/v/f:SI 84 [ a ])
                (const_int 8 [0x8])) [1 MEM[(int *)a_11(D) + 8B]+0 S4 A32])
        (reg:SI 92)) "o.c":3:14 136 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(insn 19 18 20 2 (set (reg:SI 96 [ MEM[(int *)a_11(D) + 12B] ])
        (mem:SI (plus:SI (reg/v/f:SI 84 [ a ])
                (const_int 12 [0xc])) [1 MEM[(int *)a_11(D) + 12B]+0 S4 A32])) "o.c":3:14 136 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 97 [ MEM[(int *)b_12(D) + 12B] ])
        (mem:SI (plus:SI (reg/v/f:SI 85 [ b ])
                (const_int 12 [0xc])) [1 MEM[(int *)b_12(D) + 12B]+0 S4 A32])) "o.c":3:14 136 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 85 [ b ])
        (nil)))
(insn 21 20 22 2 (set (reg:SI 95)
        (plus:SI (reg:SI 96 [ MEM[(int *)a_11(D) + 12B] ])
            (reg:SI 97 [ MEM[(int *)b_12(D) + 12B] ]))) "o.c":3:14 3 {addsi3}
     (expr_list:REG_DEAD (reg:SI 97 [ MEM[(int *)b_12(D) + 12B] ])
        (expr_list:REG_DEAD (reg:SI 96 [ MEM[(int *)a_11(D) + 12B] ])
            (nil))))
(insn 22 21 0 2 (set (mem:SI (plus:SI (reg/v/f:SI 84 [ a ])
                (const_int 12 [0xc])) [1 MEM[(int *)a_11(D) + 12B]+0 S4 A32])
        (reg:SI 95)) "o.c":3:14 136 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_DEAD (reg/v/f:SI 84 [ a ])
            (nil))))

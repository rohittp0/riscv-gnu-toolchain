
;; Function vector_add (vector_add, funcdef_no=0, decl_uid=1454, cgraph_uid=1, symbol_order=0)

scanning new insn with uid = 25.
rescanning insn with uid = 2.
scanning new insn with uid = 26.
rescanning insn with uid = 3.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


vector_add

Dataflow summary:
def_info->table_size = 35, use_info->table_size = 0
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;;  regs ever live 	 10 [a0] 11 [a1]
;;  ref usage 	r1={1d,1u} r2={1d,2u} r8={1d,2u} r10={1d,1u} r11={1d,1u} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d} r17={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r64={1d,1u} r65={1d,2u} r84={1d,8u} r85={1d,4u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} 
;;    total ref usage 73{37d,36u,0e} in 20{20 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(1){ }d1(2){ }d2(8){ }d3(10){ }d4(11){ }d5(12){ }d6(13){ }d7(14){ }d8(15){ }d9(16){ }d10(17){ }d11(42){ }d12(43){ }d13(44){ }d14(45){ }d15(46){ }d16(47){ }d17(48){ }d18(49){ }d19(64){ }d20(65){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  in  	
;; live  gen 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  kill	
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 64 [arg] 65 [frame]
;; live  out 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 64 [arg] 65 [frame]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 10 [a0] 11 [a1] 64 [arg] 65 [frame]
;; lr  def 	 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99
;; live  in  	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 64 [arg] 65 [frame]
;; live  gen 	 84 85 86 87 88 89 90 91 92 93 94 95 96 97
;; live  kill	
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  out 	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(1){ }u-1(2){ }u-1(8){ }u-1(65){ }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;; lr  use 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;; lr  def 	
;; live  in  	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 22 to worklist
  Adding insn 18 to worklist
  Adding insn 14 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
processing block 2 lr out =  1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 26 to worklist
  Adding insn 2 to worklist
  Adding insn 25 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
insn_cost 4 for    25: r98:SI=a0:SI
      REG_DEAD a0:SI
insn_cost 4 for     2: r84:SI=r98:SI
      REG_DEAD r98:SI
insn_cost 4 for    26: r99:SI=a1:SI
      REG_DEAD a1:SI
insn_cost 4 for     3: r85:SI=r99:SI
      REG_DEAD r99:SI
insn_cost 28 for     7: r87:SI=[r84:SI]
insn_cost 28 for     8: r88:SI=[r85:SI]
insn_cost 4 for     9: r86:SI=r87:SI+r88:SI
      REG_DEAD r88:SI
      REG_DEAD r87:SI
insn_cost 4 for    10: [r84:SI]=r86:SI
      REG_DEAD r86:SI
insn_cost 28 for    11: r90:SI=[r84:SI+0x4]
insn_cost 28 for    12: r91:SI=[r85:SI+0x4]
insn_cost 4 for    13: r89:SI=r90:SI+r91:SI
      REG_DEAD r91:SI
      REG_DEAD r90:SI
insn_cost 4 for    14: [r84:SI+0x4]=r89:SI
      REG_DEAD r89:SI
insn_cost 28 for    15: r93:SI=[r84:SI+0x8]
insn_cost 28 for    16: r94:SI=[r85:SI+0x8]
insn_cost 4 for    17: r92:SI=r93:SI+r94:SI
      REG_DEAD r94:SI
      REG_DEAD r93:SI
insn_cost 4 for    18: [r84:SI+0x8]=r92:SI
      REG_DEAD r92:SI
insn_cost 28 for    19: r96:SI=[r84:SI+0xc]
insn_cost 28 for    20: r97:SI=[r85:SI+0xc]
      REG_DEAD r85:SI
insn_cost 4 for    21: r95:SI=r96:SI+r97:SI
      REG_DEAD r97:SI
      REG_DEAD r96:SI
insn_cost 4 for    22: [r84:SI+0xc]=r95:SI
      REG_DEAD r95:SI
      REG_DEAD r84:SI
starting the processing of deferred insns
ending the processing of deferred insns


vector_add

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;;  regs ever live 	 10 [a0] 11 [a1]
;;  ref usage 	r1={1d,1u} r2={1d,2u} r8={1d,2u} r10={1d,1u} r11={1d,1u} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d} r17={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r64={1d,1u} r65={1d,2u} r84={1d,8u} r85={1d,4u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} 
;;    total ref usage 73{37d,36u,0e} in 20{20 regular + 0 call} insns.
(note 5 0 25 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 25 5 2 2 (set (reg:SI 98)
        (reg:SI 10 a0 [ a ])) "o.c":1:34 -1
     (expr_list:REG_DEAD (reg:SI 10 a0 [ a ])
        (nil)))
(insn 2 25 26 2 (set (reg/v/f:SI 84 [ a ])
        (reg:SI 98)) "o.c":1:34 136 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98)
        (nil)))
(insn 26 2 3 2 (set (reg:SI 99)
        (reg:SI 11 a1 [ b ])) "o.c":1:34 -1
     (expr_list:REG_DEAD (reg:SI 11 a1 [ b ])
        (nil)))
(insn 3 26 4 2 (set (reg/v/f:SI 85 [ b ])
        (reg:SI 99)) "o.c":1:34 136 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99)
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 87 [ *a_11(D) ])
        (mem:SI (reg/v/f:SI 84 [ a ]) [1 *a_11(D)+0 S4 A32])) "o.c":3:14 136 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ *b_12(D) ])
        (mem:SI (reg/v/f:SI 85 [ b ]) [1 *b_12(D)+0 S4 A32])) "o.c":3:14 136 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 86)
        (plus:SI (reg:SI 87 [ *a_11(D) ])
            (reg:SI 88 [ *b_12(D) ]))) "o.c":3:14 3 {addsi3}
     (expr_list:REG_DEAD (reg:SI 88 [ *b_12(D) ])
        (expr_list:REG_DEAD (reg:SI 87 [ *a_11(D) ])
            (nil))))
(insn 10 9 11 2 (set (mem:SI (reg/v/f:SI 84 [ a ]) [1 *a_11(D)+0 S4 A32])
        (reg:SI 86)) "o.c":3:14 136 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 90 [ MEM[(int *)a_11(D) + 4B] ])
        (mem:SI (plus:SI (reg/v/f:SI 84 [ a ])
                (const_int 4 [0x4])) [1 MEM[(int *)a_11(D) + 4B]+0 S4 A32])) "o.c":3:14 136 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 91 [ MEM[(int *)b_12(D) + 4B] ])
        (mem:SI (plus:SI (reg/v/f:SI 85 [ b ])
                (const_int 4 [0x4])) [1 MEM[(int *)b_12(D) + 4B]+0 S4 A32])) "o.c":3:14 136 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:SI 89)
        (plus:SI (reg:SI 90 [ MEM[(int *)a_11(D) + 4B] ])
            (reg:SI 91 [ MEM[(int *)b_12(D) + 4B] ]))) "o.c":3:14 3 {addsi3}
     (expr_list:REG_DEAD (reg:SI 91 [ MEM[(int *)b_12(D) + 4B] ])
        (expr_list:REG_DEAD (reg:SI 90 [ MEM[(int *)a_11(D) + 4B] ])
            (nil))))
(insn 14 13 15 2 (set (mem:SI (plus:SI (reg/v/f:SI 84 [ a ])
                (const_int 4 [0x4])) [1 MEM[(int *)a_11(D) + 4B]+0 S4 A32])
        (reg:SI 89)) "o.c":3:14 136 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89)
        (nil)))
(insn 15 14 16 2 (set (reg:SI 93 [ MEM[(int *)a_11(D) + 8B] ])
        (mem:SI (plus:SI (reg/v/f:SI 84 [ a ])
                (const_int 8 [0x8])) [1 MEM[(int *)a_11(D) + 8B]+0 S4 A32])) "o.c":3:14 136 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:SI 94 [ MEM[(int *)b_12(D) + 8B] ])
        (mem:SI (plus:SI (reg/v/f:SI 85 [ b ])
                (const_int 8 [0x8])) [1 MEM[(int *)b_12(D) + 8B]+0 S4 A32])) "o.c":3:14 136 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 92)
        (plus:SI (reg:SI 93 [ MEM[(int *)a_11(D) + 8B] ])
            (reg:SI 94 [ MEM[(int *)b_12(D) + 8B] ]))) "o.c":3:14 3 {addsi3}
     (expr_list:REG_DEAD (reg:SI 94 [ MEM[(int *)b_12(D) + 8B] ])
        (expr_list:REG_DEAD (reg:SI 93 [ MEM[(int *)a_11(D) + 8B] ])
            (nil))))
(insn 18 17 19 2 (set (mem:SI (plus:SI (reg/v/f:SI 84 [ a ])
                (const_int 8 [0x8])) [1 MEM[(int *)a_11(D) + 8B]+0 S4 A32])
        (reg:SI 92)) "o.c":3:14 136 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(insn 19 18 20 2 (set (reg:SI 96 [ MEM[(int *)a_11(D) + 12B] ])
        (mem:SI (plus:SI (reg/v/f:SI 84 [ a ])
                (const_int 12 [0xc])) [1 MEM[(int *)a_11(D) + 12B]+0 S4 A32])) "o.c":3:14 136 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 97 [ MEM[(int *)b_12(D) + 12B] ])
        (mem:SI (plus:SI (reg/v/f:SI 85 [ b ])
                (const_int 12 [0xc])) [1 MEM[(int *)b_12(D) + 12B]+0 S4 A32])) "o.c":3:14 136 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 85 [ b ])
        (nil)))
(insn 21 20 22 2 (set (reg:SI 95)
        (plus:SI (reg:SI 96 [ MEM[(int *)a_11(D) + 12B] ])
            (reg:SI 97 [ MEM[(int *)b_12(D) + 12B] ]))) "o.c":3:14 3 {addsi3}
     (expr_list:REG_DEAD (reg:SI 97 [ MEM[(int *)b_12(D) + 12B] ])
        (expr_list:REG_DEAD (reg:SI 96 [ MEM[(int *)a_11(D) + 12B] ])
            (nil))))
(insn 22 21 0 2 (set (mem:SI (plus:SI (reg/v/f:SI 84 [ a ])
                (const_int 12 [0xc])) [1 MEM[(int *)a_11(D) + 12B]+0 S4 A32])
        (reg:SI 95)) "o.c":3:14 136 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_DEAD (reg/v/f:SI 84 [ a ])
            (nil))))

;; Combiner totals: 28 attempts, 28 substitutions (4 requiring new space),
;; 0 successes.
